<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.mapper.system.ScUserMapper">
	<resultMap id="BaseResultMap" type="org.entity.system.ScUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="user_name" property="userName"
			jdbcType="VARCHAR" />
		<result column="password" property="password"
			jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="type_name" property="typeName"
			jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="status_name" property="statusName"
			jdbcType="VARCHAR" />
		<result column="create_user" property="createUser"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime"
			jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser"
			jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime"
			jdbcType="VARCHAR" />
		<collection property="extend"
			javaType="org.entity.system.ScUserExtends">
			<result column="real_name" property="realName"
				jdbcType="VARCHAR" />
			<result column="header_pic" property="headerPic"
				jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, `code`, user_name, password, phone, email,type,
		`status`,
		create_user,
		DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') as
		create_time,
		update_user,
		DATE_FORMAT(update_time,'%Y-%m-%d %H:%i:%s')
		as
		update_time
	</sql>
	<select id="select" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		SELECT
		u.`code`,
		u.user_name,
		u.`password`,
		u.phone,
		u.email,
		u.type,
		u.`status`,
		ue.real_name,
		ue.header_pic
		FROM
		sc_user AS u
		LEFT JOIN
		sc_user_extends AS ue ON u.`code` =
		ue.`code`
		<where>
			u.`code` = #{code,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="selectByDto" resultMap="BaseResultMap"
		parameterType="org.dto.system.ScUserDto">
		select
		<include refid="Base_Column_List" />
		from sc_user
		<where>
			uid is not null
			<if test="userName != null and userName != '' ">
				AND user_name = #{userName,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<!-- 验证用户是否已存在 -->
	<select id="verify" parameterType="org.dto.system.ScUserDto"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sc_user
		<where>
			user_name = #{userName,jdbcType=VARCHAR}
			OR email =
			#{email,jdbcType=VARCHAR}
			OR phone = #{phone,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="login" resultMap="BaseResultMap"
		parameterType="org.dto.system.ScUserDto">
		SELECT
		u.`code`,
		u.user_name,
		u.`password`,
		u.phone,
		ue.real_name
		FROM
		sc_user AS u
		LEFT JOIN sc_user_extends AS ue ON u.`code` = ue.`code`
		<where>
			u.user_name = #{userName,jdbcType=VARCHAR}
			AND u.`password` =
			#{password,jdbcType=VARCHAR}
		</where>
	</select>
	<delete id="delete" parameterType="java.lang.String">
		delete from
		sc_user
		where `code`
		= #{code,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.entity.system.ScUser">
		insert into sc_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			uid,
			code,
			user_name,
			password,
			phone,
			email,
			type,
			status,
			create_user,
			create_time,
			update_user,
			update_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{uid,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR},
			#{userName,jdbcType=VARCHAR},
			#{password,jdbcType=VARCHAR},
			#{phone,jdbcType=VARCHAR},
			#{email,jdbcType=VARCHAR},
			#{type,jdbcType=VARCHAR},
			#{status,jdbcType=VARCHAR},
			#{createUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{createTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'),
			#{updateUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'),
		</trim>
	</insert>
	<update id="update" parameterType="org.entity.system.ScUser">
		update sc_user
		<set>
			<if test="password != null and password != '' ">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null and phone != '' ">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null and email != '' ">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="type != null and type != '' ">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="status != null and status != '' ">
				status = #{status,jdbcType=VARCHAR},
			</if>
			update_user = #{updateUser,jdbcType=VARCHAR},
			update_time =
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'),
		</set>
		where `code` = #{code,jdbcType=VARCHAR}
	</update>
	<select id="page" parameterType="org.dto.system.ScUserDto"
		resultMap="BaseResultMap">
		SELECT
		u.`code`,
		u.user_name,
		u.phone,
		u.email,
		u.`status`,
		ue.real_name,
		t.`name` as type_name,
		s.`name` as status_name,
		DATE_FORMAT(u.create_time,'%Y-%m-%d %H:%i:%s') as
		create_time,
		DATE_FORMAT(u.update_time,'%Y-%m-%d %H:%i:%s')
		as
		update_time
		FROM
		sc_user
		AS u
		LEFT JOIN sc_user_extends AS ue ON u.`code` =
		ue.`code`
		LEFT
		JOIN
		sc_setting as t ON u.type = t.`code`
		LEFT JOIN
		sc_setting as s ON
		u.`status` = s.`code`
		<where>
			u.uid is not null
			<if test="userName != null and userName != '' ">
				AND u.user_name = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="phone != null and phone != '' ">
				AND u.phone like
				CONCAT('%',#{phone,jdbcType=VARCHAR},'%')
			</if>
			<if test="type != null and type != '' ">
				AND u.`type` = #{type,jdbcType=VARCHAR}
			</if>
			<if test="status != null and status != '' ">
				AND u.`status` = #{status,jdbcType=VARCHAR}
			</if>
			<if test="realName != null and realName != '' ">
				AND ue.real_name like
				CONCAT('%',#{realName,jdbcType=VARCHAR},'%')
			</if>
		</where>
	</select>
</mapper>